@startuml payment
actor User
boundary errorButton
boundary accountList
boundary sourceBox
boundary targetField
boundary amountField
boundary confirmButton
control OverviewController
control PaymentController
control UserAccess
boundary RestAPI
entity Bank
entity source
entity target

User -> sourceBox : selects source
User -> targetField : inputs target
User -> amountField : inputs amount
User -> confirmButton : clicks

confirmButton -> PaymentController : handlePayment()
PaymentController -> sourceBox : getValue()
PaymentController -> targetField : getText()
PaymentController -> amountField : getText()
PaymentController -> UserAccess : paymentRequest(\nsource, target, amount)
UserAccess -> RestAPI : POST bank/users/{user}\n/accounts/{source}/payment?\npassword={password}\n&targetAccount={target}\n&amount={amount}
RestAPI -> Bank: payment(user, \nsource, target, amount)
Bank -> source : withdraw(amount)
Bank -> target : deposit(amount)

alt Failed payment request
    RestAPI -> UserAccess : Response not 200 OK\nwhen exception thrown
    PaymentController -> PaymentController: showError()
    PaymentController -> errorButton: setText(message)
    PaymentController -> errorButton: setVisible(true)
    errorButton -> User : views error message
else Successful payment request
    RestAPI -> UserAccess : Response 200 OK\nwhen no exception thrown
    PaymentController -> OverviewController : update()
    OverviewController -> accountList : update list
    accountList -> User : views updated list
    
end
@enduml